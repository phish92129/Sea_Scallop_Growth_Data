scale_color_manual(values=c("#8F00FF","#0D98BA","#FFFF00","#ff5349")) +
# Aesthetic themes
theme(plot.title = element_blank (),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
x.d <- seq(min(A3$Sh_Height),max(A3$Sh_Height), by = 1)
newdata.mw <- expand.grid(
Site='NA',
Sh_Height = x.d,
Month = unique(A3$Month)
)
newdata.mw$pred <- predict(gamma.A3.top,newdata.mw,allow.new.levels=TRUE,
type = 'response')
newdata.mw$Month <- as.character(newdata.mw$Month)
newdata.mw$Month <- as.numeric(newdata.mw$Month)
newdata.mw$Month<- month.abb[newdata.mw$Month]
newdata.mw$Month <- as.factor(newdata.mw$Month)
newdata.mw$Month <- factor(newdata.mw$Month, levels = c('Feb','May','Aug','Nov'))
A3$Month <- as.character(A3$Month)
A3$Month <- as.numeric(A3$Month)
A3$Month<- month.abb[A3$Month]
A3$Month <- as.factor(A3$Month)
A3$Month <- factor(A3$Month, levels = c('Feb','May','Aug','Nov'))
ggplot(A3, aes (x= Sh_Height, y = Ww_Add)) +
geom_point(aes(color = Month)) +
geom_line(data = newdata.mw, aes(x=Sh_Height, y = pred, color = Month), size = 1) +
geom_hline (yintercept = 45.36, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 47, label = "10 Count", size = 4)+
geom_hline (yintercept = 30.24, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 32, label = "15 Count", size = 4)+
geom_hline (yintercept = 22.68, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 24.2, label = "20 Count", size = 4)+
#scale_x_reverse() +
#Theme presets
theme_classic() +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Shell Height as a Function of Adductor Weight") +
xlab("Shell Height (mm)")+
ylab("Weight (g)")+
labs(colour = "Month")+  #Legend Title Label
scale_color_manual(values=c("#8F00FF","#0D98BA","#FFFF00","#ff5349")) +
# Aesthetic themes
theme(plot.title = element_blank (),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
x.d <- seq(min(A3$Sh_Height),max(A3$Sh_Height), by = 1)
newdata.mw <- expand.grid(
Site='NA',
Sh_Height = x.d,
Month = unique(A3$Month)
)
newdata.mw$pred <- predict(gamma.A3.top,newdata.mw,allow.new.levels=TRUE,
type = 'response')
newdata.mw$Month <- as.character(newdata.mw$Month)
newdata.mw$Month <- as.numeric(newdata.mw$Month)
newdata.mw$Month<- month.abb[newdata.mw$Month]
newdata.mw$Month <- as.factor(newdata.mw$Month)
newdata.mw$Month <- factor(newdata.mw$Month, levels = c('Feb','May','Aug','Nov'))
A3$Month <- as.character(A3$Month)
A3$Month <- as.numeric(A3$Month)
A3$Month<- month.abb[A3$Month]
A3$Month <- as.factor(A3$Month)
A3$Month <- factor(A3$Month, levels = c('Feb','May','Aug','Nov'))
ggplot(A3, aes (x= Sh_Height, y = Ww_Add)) +
geom_point(aes(color = Month)) +
geom_line(data = newdata.mw, aes(x=Sh_Height, y = pred, color = Month), size = 1) +
geom_hline (yintercept = 45.36, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 47, label = "10 Count", size = 4)+
geom_hline (yintercept = 30.24, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 32, label = "15 Count", size = 4)+
geom_hline (yintercept = 22.68, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 24.2, label = "20 Count", size = 4)+
#scale_x_reverse() +
#Theme presets
theme_classic() +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Shell Height as a Function of Adductor Weight") +
xlab("Shell Height (mm)")+
ylab("Weight (g)")+
labs(colour = "Month")+  #Legend Title Label
scale_color_manual(values=c("#8F00FF","#0D98BA","#FFFF00","#ff5349")) +
# Aesthetic themes
theme(plot.title = element_blank (),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
A3 <- sw
A3$Month <- as.factor(A3$Month)
A3$Sh_Height <- as.numeric(A3$Sh_Height)
# Assess on various distributions
qqp(A3$Ww_Add, "norm")
gamma <- fitdistr(A3$Ww_Add, "gamma")
qqp(A3$Ww_Add, "gamma", shape = gamma$estimate[[1]], rate = gamma$estimate[[2]])
gamma.A3 <- glmmTMB(Ww_Add ~  (1|Site) + Sh_Height + Month + Trial,
family= gaussian(link=log), data = A3)
summary(gamma.A3)
MXPARAMS<-7 #limit max parameters to about 1:10 per vars:total N in dataset
options(na.action = "na.fail")
gamma.A3_dredgemm <- dredge(gamma.A3, rank="AICc",
extra=alist(AICc))      #use beta="sd" if cont. vars are scaled
write.csv(gamma.A3_dredgemm, file= "gammaA3_dredgemm.csv") #complete model selection output
gamma.A3_subset<- subset(gamma.A3_dredgemm, delta <2) #confidence set model output
write.csv(gamma.A3_subset, file="gammaA3_subset.csv")
RI_gamma.A3 <- sw(gamma.A3_subset) #outputs variable importance if >1 model in conf.set
x.d <- seq(min(A3$Sh_Height),max(A3$Sh_Height), by = 1)
newdata.mw <- expand.grid(
Site='NA',
Sh_Height = x.d,
Month = unique(A3$Month)
)
newdata.mw$pred <- predict(gamma.A3.top,newdata.mw,allow.new.levels=TRUE,
type = 'response')
newdata.mw$Month <- as.character(newdata.mw$Month)
newdata.mw$Month <- as.numeric(newdata.mw$Month)
newdata.mw$Month<- month.abb[newdata.mw$Month]
newdata.mw$Month <- as.factor(newdata.mw$Month)
newdata.mw$Month <- factor(newdata.mw$Month, levels = c('Feb','May','Aug','Nov'))
A3$Month <- as.character(A3$Month)
A3$Month <- as.numeric(A3$Month)
A3$Month<- month.abb[A3$Month]
A3$Month <- as.factor(A3$Month)
A3$Month <- factor(A3$Month, levels = c('Feb','May','Aug','Nov'))
ggplot(A3, aes (x= Sh_Height, y = Ww_Add)) +
geom_point(aes(color = Month)) +
geom_line(data = newdata.mw, aes(x=Sh_Height, y = pred, color = Month), size = 1) +
geom_hline (yintercept = 45.36, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 47, label = "10 Count", size = 4)+
geom_hline (yintercept = 30.24, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 32, label = "15 Count", size = 4)+
geom_hline (yintercept = 22.68, linetype="dashed", color = "red") +
annotate ("text", x = 65, y = 24.2, label = "20 Count", size = 4)+
#scale_x_reverse() +
#Theme presets
theme_classic() +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
ggtitle("Shell Height as a Function of Adductor Weight") +
xlab("Shell Height (mm)")+
ylab("Weight (g)")+
labs(colour = "Month")+  #Legend Title Label
scale_color_manual(values=c("#8F00FF","#0D98BA","#FFFF00","#ff5349")) +
# Aesthetic themes
theme(plot.title = element_blank (),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
library(scales)
custom_date_labels <- function(date_row, #point at OG dates
start_date, #specify what year number
start_month, #specify what month number aug = 8
mode = "labs", #for labs or breaks?
num_breaks = 9) { #set the number of breaks you want
dates <- seq(min(date_row), max(date_row), by = ((as.numeric(difftime(max(date_row), min(date_row), units = "days")))/ (num_breaks - 1)))
if (mode == "breaks"){ #Returns the dates of the breaks to be used in placing them
return(dates)
}else{#labs
labels <- sapply(dates, function(date) {
parsed_date <<- as.Date(date)
year_diff <- year(parsed_date) - start_date
if (month(parsed_date) >= start_month) {
year_label <- year_diff
} else {
year_label <- year_diff - 1
}
paste(month(parsed_date, label = TRUE, abbr = TRUE), "Year", year_label)
})
return(labels) #Returns the specific labs
}
}
selected_labels <- custom_date_labels(predicted.sh$Date, 0000,8, mode = "labs",num_breaks = 9)
selected_labels[selected_labels=="Sep Year 4"]<-"Aug Year 4"
selected_dates <- custom_date_labels(predicted.sh$Date, 0000,8, mode = "breaks", num_breaks=9)
selected_dates[selected_dates=="0004-09-01"]<-"0004-08-15"
# Example list of dates (replace with your actual list of dates)
date_list <- c("2024-06-20", "2023-10-15", "2025-01-01")
# Define the start date
start_date <- ymd("2018-10-01")  # Change this to your desired start date
# Calculate the year difference
year_difference <- difftime(ymd(date_list), start_date, units = "days")
year_rel <- year_difference + ymd("0000-10-01")
# Print the year difference
print(year_rel)
formatted_date <- format(year_rel, "%B %d, Year %_Y")
print(formatted_date[order(formatted_date)]) #should still work as a valid date format
min <- as.Date("0002-07-01")
max <- NA
mid <- as.Date("0004-02-01")
min2 <- as.Date("0003-03-01")
min3 <- as.Date("0003-04-01")
max2 <- as.Date("0004-09-01")
st <- ymd("0000-10-01")
P1 <- ggplot(predicted.sh, aes(y = Sh_Height))+
geom_line(aes(x = Date, color = Trial), linewidth = .1) +
annotate("rect", xmin = min3, xmax = max2, ymin = 90, ymax = 120,
alpha = .1,fill = "blue")+
annotate("text", x = mid, y=93,
label="Adductor Harvest period")+
theme_minimal() +
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) + #remove gridlines
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) + #remove gridlines
ylab('Shell Height (mm)')+
labs(color = "Trial")+
scale_x_date(breaks = selected_dates, labels = selected_labels) +
# scale_x_date(NULL,
#              breaks = scales::breaks_width("3 months"),
#              labels = date_format("%b\nyear %_Y"),
#              limits = c(min,max))+
scale_color_manual(values=c("#192841", "#F79256"))+
theme(plot.title = element_blank (),
strip.text.x = element_text(size=12, face="bold"), legend.position = 'none',
strip.text.y = element_text(size=12, face="bold"),axis.title.x = element_blank(),
legend.title = element_text(size=10, face="bold"), legend.text = element_text(size = 10),
axis.title.y = element_text(face="bold", size=12,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.y = element_text(size=12),
axis.text.x=element_text(size=12,angle=35,vjust= .5),
panel.border = element_rect(colour = "black", fill=NA, size=1))
print(P1)
p.tot$yrDate <- p.tot$yrDate - 2000
p.tot <- transform(p.tot, Date = as.Date(yrDate, frac = .5))
p.tot$Trial <- as.factor(p.tot$Trial)
p.tot.p2 <- subset(p.tot, x>82)
p.tot.p2$yrdate.2 <- as.Date(p.tot.p2$yrDate)
selected_dates.P2 <- ymd("0003-05-15", "0003-08-15", "0003-11-16",
"0004-02-15", "0004-05-15", "0004-08-15")
selected_labels.P2 <- c("May Year 2", "Aug Year 3", "Nov Year 3",
"Feb Year 3","May Year 3", "Aug Year 4")
selected_labels.P2 <- custom_date_labels(p.tot.p2$yrdate.2, 0000, 5, mode = "labs",num_breaks = 5)
selected_dates.P2 <- custom_date_labels(p.tot.p2$yrdate.2, 0000, 5, mode = "breaks", num_breaks=5)
selected_labels.P2[selected_labels.P2=="Dec Year 3"]<-"Nov Year 3"
selected_labels.P2[selected_labels.P2=="Apr Year 3"]<-"May Year 3"
P2 <- ggplot(p.tot.p2, aes(y = pred))+
geom_point(aes(x = Date, color = Trial), size = 2.5) +
theme_minimal() +
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) + #remove gridlines
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) + #remove gridlines
scale_y_continuous(
"Adductor Weight (grams)",
sec.axis = sec_axis(~(1/.) * 453.5929, name = "Meats/lbs (Count)",breaks=seq(5,30,5))
)+
labs(color = "Trial")+
xlab("Time (Month)")+
scale_x_date(breaks = selected_dates.P2, labels = selected_labels.P2) +
scale_color_manual(values=c("#192841", "#F79256"))+
theme(strip.text.x = element_text(size=12, face="bold"), legend.position = 'bottom',
strip.text.y = element_text(size=12, face="bold"),axis.title.x = element_text(face="bold", size=12),
legend.title = element_text(size=10, face="bold"), legend.text = element_text(size = 10),
axis.title.y = element_text(face="bold", size=12,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.y = element_text(size=12),
axis.text.x=element_text(size=12,angle=35,vjust= .5),
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_rect(fill='#E5E3FD'))
print(P2)
plot_grid(P2, P1,ncol = 1,
labels = "AUTO")
p.mort$yrDate<- p.mort$yrDate - 2000
p.mort$Date <- as.Date(p.mort$yrDate)
p.mort$Date.character <- as.character(p.mort$yrDate)
p.mort$Date.character <- c("May Year 2", "Aug Year 3", "Nov Year 3",
"Feb Year 3", "May Year 3", "Aug Year 4",
"May Year 2", "Aug Year 3", "Nov Year 3",
"Feb Year 3", "May Year 3", "Aug Year 4")
p.mort <- gather(p.mort, mortality,diff,'0%':'10%')
min3 <- as.Date("2002-06-01")
max3 <- NA
p.mort$mortality <- as.factor(p.mort$mortality)
p.mort$mortality <- factor(p.mort$mortality, levels = c('0%','2.5%','5%','7.5%','10%'))
P5 <- ggplot(p.mort, aes (x= Date, y = diff)) +
geom_line(aes(color = mortality),linewidth=1) +
geom_hline(yintercept=0, linetype='dashed',linewidth=1.2)+
#scale_x_reverse() +
#Theme presets
theme_classic() +
facet_grid(rows = vars(Trial)) +
scale_x_date(breaks = p.mort$Date, labels = p.mort$Date.character) +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
#ggtitle("Quarterly Percent Change in Adductor Meat Weight over Time") +
xlab("Time (Month)")+
ylab("Weight Change (%)")+
labs(colour = "Quarterly Mortality (%)")+  #Legend Title Label
# Aesthetic themes
theme(plot.title = element_blank (),      #Plot title themese
axis.text.x  = element_text(size=16),     #X axis themes
axis.title.x = element_text(face="bold", size=16),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "bottom",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
p.mort<- gather(p.mort, add.mort, weight, c(pred,p.2.5:p.10))
p.mort$add.mort <- as.factor(p.mort$add.mort)
p.mort$add.mort <- factor(p.mort$add.mort, levels = c('pred','p.2.5','p.5','p.7.5','p.10'))
P6 <- ggplot(p.mort, aes (x= Date, y = weight)) +
geom_line(aes(color = add.mort),linewidth=1) +
#scale_x_reverse() +
#Theme presets
theme_classic() +
facet_grid(rows = vars(Trial)) +
scale_x_date(breaks = p.mort$Date, labels = p.mort$Date.character) +
#remove gridlines
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) +
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) +
# Plot Labels
#ggtitle("Adductor Production (kg) in a 100,000 scallop Farm over Year 3 Grow-Out") +
xlab("Time (Month/Year Class)")+
ylab("Adductor Weight (grams)")+
#Legend Title Label
# Aesthetic themes
theme(plot.title = element_blank(),      #Plot title themese
axis.text.x  = element_blank(),     #X axis themes
axis.title.x = element_blank(),
strip.text.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),      #y axis themes
axis.title.y = element_text(face="bold", size=16),
strip.text.y = element_text(size=16, face="bold"),
legend.position = "none",               # Legend themes
legend.title = element_text(size=16, face="bold"),
legend.text = element_text(size = 16))
plot_grid(P6, P5,ncol = 1,labels='AUTO')
P1 <- ggplot(predicted.sh, aes(y = Sh_Height))+
geom_line(aes(x = Date, color = Trial), linewidth = .1) +
annotate("rect", xmin = min3, xmax = max2, ymin = 90, ymax = 120,
alpha = .1,fill = "blue")+
annotate("text", x = mid, y=93,
label="Adductor Harvest period")+
theme_minimal() +
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) + #remove gridlines
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) + #remove gridlines
ylab('Shell Height (mm)')+
labs(color = "Trial")+
scale_x_date(breaks = selected_dates, labels = selected_labels) +
# scale_x_date(NULL,
#              breaks = scales::breaks_width("3 months"),
#              labels = date_format("%b\nyear %_Y"),
#              limits = c(min,max))+
scale_color_manual(values=c("#192841", "#F79256"))+
theme(plot.title = element_blank (),
strip.text.x = element_text(size=12, face="bold"), legend.position = 'none',
strip.text.y = element_text(size=12, face="bold"),axis.title.x = element_blank(),
legend.title = element_text(size=10, face="bold"), legend.text = element_text(size = 10),
axis.title.y = element_text(face="bold", size=12,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.y = element_text(size=12),
axis.text.x=element_text(size=12,angle=35,vjust= .5),
panel.border = element_rect(colour = "black", fill=NA, size=1))
print(P1)
p.tot$yrDate <- p.tot$yrDate - 2000
p.tot <- transform(p.tot, Date = as.Date(yrDate, frac = .5))
p.tot$Trial <- as.factor(p.tot$Trial)
p.tot.p2 <- subset(p.tot, x>82)
p.tot.p2$yrdate.2 <- as.Date(p.tot.p2$yrDate)
selected_dates.P2 <- ymd("0003-05-15", "0003-08-15", "0003-11-16",
"0004-02-15", "0004-05-15", "0004-08-15")
selected_labels.P2 <- c("May Year 2", "Aug Year 3", "Nov Year 3",
"Feb Year 3","May Year 3", "Aug Year 4")
selected_labels.P2 <- custom_date_labels(p.tot.p2$yrdate.2, 0000, 5, mode = "labs",num_breaks = 5)
selected_dates.P2 <- custom_date_labels(p.tot.p2$yrdate.2, 0000, 5, mode = "breaks", num_breaks=5)
selected_labels.P2[selected_labels.P2=="Dec Year 3"]<-"Nov Year 3"
selected_labels.P2[selected_labels.P2=="Apr Year 3"]<-"May Year 3"
custom_date_labels <- function(date_row, #point at OG dates
start_date, #specify what year number
start_month, #specify what month number aug = 8
mode = "labs", #for labs or breaks?
num_breaks = 9) { #set the number of breaks you want
dates <- seq(min(date_row), max(date_row), by = ((as.numeric(difftime(max(date_row), min(date_row), units = "days")))/ (num_breaks - 1)))
if (mode == "breaks"){ #Returns the dates of the breaks to be used in placing them
return(dates)
}else{#labs
labels <- sapply(dates, function(date) {
parsed_date <<- as.Date(date)
year_diff <- year(parsed_date) - start_date
if (month(parsed_date) >= start_month) {
year_label <- year_diff
} else {
year_label <- year_diff - 1
}
paste(month(parsed_date, label = TRUE, abbr = TRUE), "Year", year_label)
})
return(labels) #Returns the specific labs
}
}
selected_labels <- custom_date_labels(predicted.sh$Date, 0000,8, mode = "labs",num_breaks = 9)
selected_labels[selected_labels=="Sep Year 4"]<-"Aug Year 4"
selected_dates <- custom_date_labels(predicted.sh$Date, 0000,8, mode = "breaks", num_breaks=9)
selected_dates[selected_dates=="0004-09-01"]<-"0004-08-15"
# Example list of dates (replace with your actual list of dates)
date_list <- c("2024-06-20", "2023-10-15", "2025-01-01")
# Define the start date
start_date <- ymd("2018-10-01")  # Change this to your desired start date
# Calculate the year difference
year_difference <- difftime(ymd(date_list), start_date, units = "days")
year_rel <- year_difference + ymd("0000-10-01")
# Print the year difference
print(year_rel)
formatted_date <- format(year_rel, "%B %d, Year %_Y")
print(formatted_date[order(formatted_date)]) #should still work as a valid date format
min <- as.Date("0002-07-01")
max <- NA
mid <- as.Date("0004-02-01")
min2 <- as.Date("0003-03-01")
min3 <- as.Date("0003-04-01")
max2 <- as.Date("0004-09-01")
st <- ymd("0000-10-01")
P1 <- ggplot(predicted.sh, aes(y = Sh_Height))+
geom_line(aes(x = Date, color = Trial), linewidth = .1) +
annotate("rect", xmin = min3, xmax = max2, ymin = 90, ymax = 120,
alpha = .1,fill = "blue")+
annotate("text", x = mid, y=93,
label="Adductor Harvest period")+
theme_minimal() +
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) + #remove gridlines
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) + #remove gridlines
ylab('Shell Height (mm)')+
labs(color = "Trial")+
scale_x_date(breaks = selected_dates, labels = selected_labels) +
# scale_x_date(NULL,
#              breaks = scales::breaks_width("3 months"),
#              labels = date_format("%b\nyear %_Y"),
#              limits = c(min,max))+
scale_color_manual(values=c("#192841", "#F79256"))+
theme(plot.title = element_blank (),
strip.text.x = element_text(size=12, face="bold"), legend.position = 'none',
strip.text.y = element_text(size=12, face="bold"),axis.title.x = element_blank(),
legend.title = element_text(size=10, face="bold"), legend.text = element_text(size = 10),
axis.title.y = element_text(face="bold", size=12,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.y = element_text(size=12),
axis.text.x=element_text(size=12,angle=35,vjust= .5),
panel.border = element_rect(colour = "black", fill=NA, size=1))
print(P1)
p.tot$yrDate <- p.tot$yrDate - 2000
p.tot <- transform(p.tot, Date = as.Date(yrDate, frac = .5))
p.tot$Trial <- as.factor(p.tot$Trial)
p.tot.p2 <- subset(p.tot, x>82)
p.tot.p2$yrdate.2 <- as.Date(p.tot.p2$yrDate)
selected_dates.P2 <- ymd("0003-05-15", "0003-08-15", "0003-11-16",
"0004-02-15", "0004-05-15", "0004-08-15")
selected_labels.P2 <- c("May Year 2", "Aug Year 3", "Nov Year 3",
"Feb Year 3","May Year 3", "Aug Year 4")
selected_labels.P2 <- custom_date_labels(p.tot.p2$yrdate.2, 0000, 5, mode = "labs",num_breaks = 5)
selected_dates.P2 <- custom_date_labels(p.tot.p2$yrdate.2, 0000, 5, mode = "breaks", num_breaks=5)
selected_labels.P2[selected_labels.P2=="Dec Year 3"]<-"Nov Year 3"
selected_labels.P2[selected_labels.P2=="Apr Year 3"]<-"May Year 3"
P2 <- ggplot(p.tot.p2, aes(y = pred))+
geom_point(aes(x = Date, color = Trial), size = 2.5) +
theme_minimal() +
theme(panel.grid.major.x=element_blank(), panel.grid.major.y=element_blank()) + #remove gridlines
theme(panel.grid.minor.x=element_blank(), panel.grid.minor.y=element_blank()) + #remove gridlines
scale_y_continuous(
"Adductor Weight (grams)",
sec.axis = sec_axis(~(1/.) * 453.5929, name = "Meats/lbs (Count)",breaks=seq(5,30,5))
)+
labs(color = "Trial")+
xlab("Time (Month)")+
scale_x_date(breaks = selected_dates.P2, labels = selected_labels.P2) +
scale_color_manual(values=c("#192841", "#F79256"))+
theme(strip.text.x = element_text(size=12, face="bold"), legend.position = 'bottom',
strip.text.y = element_text(size=12, face="bold"),axis.title.x = element_text(face="bold", size=12),
legend.title = element_text(size=10, face="bold"), legend.text = element_text(size = 10),
axis.title.y = element_text(face="bold", size=12,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.y = element_text(size=12),
axis.text.x=element_text(size=12,angle=35,vjust= .5),
panel.border = element_rect(colour = "black", fill=NA, size=1),
panel.background = element_rect(fill='#E5E3FD'))
print(P2)
plot_grid(P2, P1,ncol = 1,
labels = "AUTO")
